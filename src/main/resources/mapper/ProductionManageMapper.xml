<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.dao.ProductionManageMapper">
  <resultMap id="BaseResultMap" type="com.tian.model.ProductionManage">
    <constructor>
      <idArg column="production_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="production_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="belong_first_showreel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="belong_second_showreel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="production_state" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="compile_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="updated_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="intro" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="thumbnail" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="video_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="particulars" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="introduce" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="production_leavewords" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByproductionNameAndproductionState" resultMap="BaseResultMap">
    select *
    from production_manage
    <where>
      <if test="productionName != null and productionName != ''">
        and production_name LIKE CONCAT(CONCAT('%',#{productionName},'%'))
      </if>
      <if test="productionState != null and productionState != ''">
        and production_state = #{productionState,jdbcType=TINYINT}
      </if>

    </where>
  </select>


  <!-- 根据作品id删除作品 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production_manage
    where production_id = #{productionId,jdbcType=INTEGER}
  </delete>


  <!-- 新增作品 -->
 <insert id="insert"  useGeneratedKeys="true" keyProperty="productionId">
    insert into production_manage
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="productionName != null">
        production_name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="thumbnail != null">
        thumbnail,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="particulars != null">
        particulars,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="productionName != null">
        #{productionName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="thumbnail != null">
        #{thumbnail,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="particulars != null">
        #{particulars,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

    <select id="selectProductionNameByPrimaryKey"  resultType="java.lang.String">
    select production_name from production_manage
    where production_id = #{productionId,jdbcType=INTEGER}
  </select>




  <!-- 根据作品id添加作品留言 -->
  <update id="updateLeaveWordsByPrimaryKey" >
    update production_manage
    <set>

        production_leavewords = #{productionLeavewords,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=BIGINT}
    </set>
    where production_id = #{productionId,jdbcType=INTEGER}
  </update>

  <!-- 根据作品id修改作品标题-->
  <update id="updateProductionNameByPrimaryKey">
    update production_manage
    set
    <if test="productionName != null">
    production_name = #{productionName,jdbcType=VARCHAR},
    </if>
    updated_at = #{updatedAt,jdbcType=BIGINT}
    where production_id = #{productionId,jdbcType=INTEGER}
  </update>

  <!-- 根据作品id修改作品状态-->
  <update id="updateProductionStateByPrimaryKey">
    update production_manage
    set production_state = #{productionState,jdbcType=TINYINT},
    updated_at = #{updatedAt,jdbcType=BIGINT}
    where production_id = #{productionId,jdbcType=INTEGER}
  </update>



</mapper>