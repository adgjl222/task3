<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.dao.SecondShowreelMapper">
  <resultMap id="BaseResultMap" type="com.tian.model.SecondShowreel">
    <constructor>
      <idArg column="second_showreel_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="second_showreel_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="second_showreel_state" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="first_showreel_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="updated_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="first_showreel_state" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="compile_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

    <select id="selectBySecondShowreelStateAndSecondShowreelName" resultMap="BaseResultMap">
    select 
    *
    from second_showreel
      <where>
        <if test="secondShowreelState != null and secondShowreelState != ''">
          and second_showreel_state LIKE CONCAT(CONCAT('%',#{secondShowreelState},'%'))
        </if>
        <if test="secondShowreelName != null and secondShowreelName != ''">
          and second_showreel_name = #{secondShowreelName,jdbcType=TINYINT}
        </if>

      </where>
  </select>

    <!-- 删除二级作品集分类 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from second_showreel
    where second_showreel_id = #{secondShowreelId,jdbcType=INTEGER}
  </delete>

  <!-- 新增二级作品集分类 -->
    <insert id="insert" parameterType="com.tian.model.SecondShowreel" useGeneratedKeys="true" keyProperty="secondShowreelId">
    insert into second_showreel (second_showreel_name,
      second_showreel_state, first_showreel_name,compile_by,
      created_at, updated_at)
    values (#{secondShowreelName,jdbcType=VARCHAR},
      #{secondShowreelState,jdbcType=TINYINT}, #{firstShowreelName,jdbcType=VARCHAR},
       #{compileBy,jdbcType=VARCHAR},#{createdAt,jdbcType=BIGINT}, #{updatedAt,jdbcType=BIGINT})
  </insert>

    <insert id="insertSelective" parameterType="com.tian.model.SecondShowreel">
    insert into second_showreel
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="secondShowreelName != null">
        second_showreel_name,
      </if>
      <if test="secondShowreelState != null">
        second_showreel_state,
      </if>
      <if test="firstShowreelName != null">
        first_showreel_name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="firstShowreelState != null">
        first_showreel_state,
      </if>
      <if test="compileBy != null">
        compile_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="secondShowreelName != null">
        #{secondShowreelName,jdbcType=VARCHAR},
      </if>
      <if test="secondShowreelState != null">
        #{secondShowreelState,jdbcType=TINYINT},
      </if>
      <if test="firstShowreelName != null">
        #{firstShowreelName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="firstShowreelState != null">
        #{firstShowreelState,jdbcType=TINYINT},
      </if>
      <if test="compileBy != null">
        #{compileBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



    <update id="updateByPrimaryKeySelective" parameterType="com.tian.model.SecondShowreel">
    update second_showreel
    <set>

      <if test="secondShowreelName != null">
        second_showreel_name = #{secondShowreelName,jdbcType=VARCHAR},
      </if>
      <if test="secondShowreelState != null">
        second_showreel_state = #{secondShowreelState,jdbcType=TINYINT},
      </if>
      <if test="firstShowreelName != null">
        first_showreel_name = #{firstShowreelName,jdbcType=VARCHAR},
      </if>

      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=BIGINT},
      </if>
      <if test="firstShowreelState != null">
        first_showreel_state = #{firstShowreelState,jdbcType=TINYINT},
      </if>
      <if test="compileBy != null">
        compile_by = #{compileBy,jdbcType=VARCHAR},
      </if>
    </set>
    where second_showreel_id = #{ secondShowreelId,jdbcType=INTEGER}
  </update>

</mapper>